{"version":3,"sources":["ColorBoxes/assets.js","logo.svg","Clicker/Clicker.js","Dice/Die.js","Dice/RollDie.js","Loto/Ball.js","Loto/Lottory.js","Flip/Coin.js","Flip/Flip.js","ColorBoxes/Box.js","ColorBoxes/ColorBoxes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","choiceFromArray","arr","Math","floor","random","length","Clicker","props","eHandler","e","setState","state","randInt","status","num","console","log","bind","className","this","onClick","Component","Die","class","face","roll","RollDie","rand","prsntNum1","prsntNum2","currentNum1","currentNum2","isRolling","setTimeout","disabled","defaultProps","LottoBall","Lottory","Array","from","numB","newNum","test","i","push","maxNum","map","n","Coin","data","flag","src","alt","height","width","Filp","numOfFlips","headCount","tailCount","current","flipFlag","ans","Box","color","handelClick","newColor","style","backgroundColor","ColorBoxes","boxes","nBoxes","App","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3f5c6573.chunk.js","sourcesContent":["let colors= ['aqua', 'black', 'blue', 'fuchsia', 'gray', 'green', \r\n            'lime', 'maroon', 'navy', 'olive', 'orange', 'purple', \r\n            'red', 'silver', 'teal', 'white', 'yellow'];\r\n\r\n\r\nlet choiceFromArray = (arr)=>{\r\n    return arr[Math.floor(Math.random()*arr.length)]\r\n}\r\nmodule.exports = {colors,choiceFromArray}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\n\r\nclass Clicker extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            num : 0,\r\n            status:false\r\n        }\r\n        this.eHandler = this.eHandler.bind(this)\r\n    }\r\n\r\n    eHandler=(e)=>{\r\n        this.setState((state)=>{\r\n            let randInt = Math.floor(Math.random()*10)\r\n            if (randInt===7){\r\n                state.status = true;\r\n            }\r\n            return {num:randInt}\r\n        })\r\n        console.log(this.state.num)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Clicker\">\r\n                <h1>Count Clicks</h1>\r\n                <h1>{this.state.num}</h1>\r\n                <div className=\"Clicker-Button\">\r\n                    {this.state.status?<h1>Game Over</h1>:<button onClick={this.eHandler}>Click Me</button>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Clicker","import React, { Component } from 'react'\r\nimport './Die.css'\r\n\r\nclass Die extends Component{\r\n    render(){\r\n        return (\r\n            <i class={` Die fas fa-dice-${this.props.face} ${this.props.roll && 'rolling'}`}></i>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Die","import React, { Component } from 'react'\r\nimport Die from './Die'\r\nimport './RollDie.css'\r\n\r\nclass RollDie extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentNum1 : 'one',\r\n            currentNum2 : 'one',\r\n            isRolling :false\r\n        }\r\n        this.rand = this.rand.bind(this)\r\n\r\n    }\r\n    static defaultProps= {\r\n        num : ['one','two','three','four','five','six'],\r\n    }\r\n\r\n    rand = ()=>{\r\n        let prsntNum1 = this.props.num[Math.floor(Math.random()*this.props.num.length)]\r\n        let prsntNum2 = this.props.num[Math.floor(Math.random()*this.props.num.length)]\r\n        this.setState({currentNum1:prsntNum1,currentNum2:prsntNum2,isRolling:true})\r\n        setTimeout(()=>{\r\n            this.setState({isRolling:false})\r\n        },1000)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"RollDie\">\r\n                <h1>Roll Dice</h1>\r\n                <Die face={this.state.currentNum1} roll={this.state.isRolling}/>\r\n                <Die face={this.state.currentNum2} roll={this.state.isRolling}/>\r\n                <button onClick={this.rand} disabled={this.state.isRolling}>Change</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RollDie","import React, { Component } from 'react'\r\nimport './Ball.css'\r\n\r\nclass LottoBall extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"circle\">\r\n                <h1>{this.props.num}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LottoBall","import React, { Component } from 'react'\r\nimport LottoBall from './Ball';\r\nimport \"./Lottory.css\"\r\nclass Lottory extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            num :Array.from({length:this.props.numB})\r\n        }\r\n        this.newNum = this.newNum.bind(this)\r\n    }\r\n\r\n    static defaultProps ={\r\n        maxNum :40,\r\n        numB:6\r\n    }\r\n\r\n    newNum(){\r\n        let test = [];\r\n        for(let i=0;i<this.props.numB;i++){\r\n            test.push(Math.floor(Math.random()*this.props.maxNum))\r\n        }\r\n        this.setState({num:[...test]})\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='Lottory'>\r\n                <h1> Genetrate Six Random Numbers</h1>\r\n                <div className=\"Lottory-balls\">\r\n                {this.state.num.map(n => <LottoBall num={n}/>)}\r\n                </div>\r\n            <button onClick={this.newNum}>Change</button>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Lottory","import React, { Component } from 'react'\r\n\r\nclass Coin extends Component{\r\n    render(){\r\n        let data = [\r\n            [\"Tail\", \"http://www.pcgscoinfacts.com/UserImages/71009269r.jpg?__cf_chl_jschl_tk__=816129de449b3c35dfb2f91720a5147e6c3364c4-1588321043-0-AZErOGnm7Tx8VAdUzkqRB9shsA7MwgKFaBdP9nAf69rmCU1O7k_LWFjLPuC90Ix9Va4PLy6Nx4N04PNYuaJyTj80lwhb3Cx_DcG5wFqZoLaDAJsSkjd-LZ1Yr97c0eksG1MJtBkljFLwhz0nQzxxWB9hYKrdD6UokcnyAJO64UX89-9trvpP-4fLhMjDPbJP87_4avMC8Bfw4QlhnBgMfJDqSZtkgBhwySr8tg7GDNj_VM5yvGo2z6S8lY6VmeqM461-wvtxwAqwN_fMPq9wXLrtlka7IYLCPWq68Wf9J7p7t_2nK02q7J6RwNLUCInFxg\"],\r\n            [\"Head\",\"https://upload.wikimedia.org/wikipedia/commons/c/cd/S_Half_Dollar_Obverse_2016.jpg\"]\r\n        ]\r\n        return (\r\n            <div className=\"Coin\">\r\n            <h1>{data[this.props.flag][0]}</h1>\r\n            <img src={data[this.props.flag][1]} alt={this.props.flag?\"Head\":\"Tail\"} height=\"100\" width=\"100\"></img>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Coin","import React, { Component } from \"react\";\r\nimport Coin from './Coin'\r\nimport './Flip.css'\r\n\r\nclass Filp extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      numOfFlips : 0,\r\n      headCount : 0,\r\n      tailCount : 0,\r\n      current:null\r\n    }\r\n    this.flipFlag = this.flipFlag.bind(this)\r\n  }\r\n  flipFlag(){\r\n    // let ans = (Boolean(Math.floor(Math.random()*2)))\r\n    let ans = (Math.floor(Math.random()*2))\r\n    ans?this.setState({headCount:this.state.headCount+1}):this.setState({tailCount:this.state.tailCount+1});\r\n    this.setState({numOfFlips:this.state.numOfFlips+1,current:ans})\r\n    // return ans\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Flip\">\r\n        <h1>Flip a Coin</h1>\r\n      <h2>Num of Flips: {this.state.numOfFlips} Heads: {this.state.headCount} Tails:{this.state.tailCount}</h2>\r\n        <button onClick={this.flipFlag}>Change</button>\r\n        {this.state.current!=null && <Coin flag={this.state.current}/>}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Filp;\r\n","import React, { Component } from 'react'\r\nimport {colors, choiceFromArray} from './assets'\r\nimport './Box.css'\r\nclass Box extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            color:choiceFromArray(colors)\r\n        }\r\n        this.handelClick = this.handelClick.bind(this)\r\n    }\r\n    handelClick(){\r\n        let newColor;\r\n        do {\r\n            newColor = choiceFromArray(colors)\r\n        }while(newColor===this.state.color)\r\n        this.setState({color:newColor})\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Box\" style={{backgroundColor:this.state.color}} onClick={this.handelClick}>\r\n                <h2>Box</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Box\r\n","import React, { Component } from 'react'\r\nimport Box from './Box'\r\nimport './ColorBox.css'\r\nclass ColorBoxes extends Component{\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    static defaultProps = { nBoxes: 18 } \r\n    render(){\r\n        // let str = []\r\n        // for(let i=0;i<this.props.nBoxes;i++){\r\n        //     str.push(<Box/>)\r\n        // }\r\n        let boxes = Array.from({length:this.props.nBoxes})\r\n                        .map(()=>(<Box/>))\r\n        return(\r\n            <div>\r\n                <h1>Diffrent Colours</h1>\r\n            <div className=\"colorBoxes\">\r\n                {boxes}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorBoxes","import React from 'react';\nimport Clicker from './Clicker/Clicker'\nimport RollDie from './Dice/RollDie';\nimport Lottory from './Loto/Lottory';\nimport Flip from './Flip/Flip'\nimport ColorBoxes from './ColorBoxes/ColorBoxes'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ColorBoxes/>\n        <hr className=\"style-seven\"/>\n        <Flip/>\n        <hr/>\n        <Lottory />\n        <hr/>\n        <RollDie/>\n        <hr/>\n        <Clicker/>\n        <hr/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}