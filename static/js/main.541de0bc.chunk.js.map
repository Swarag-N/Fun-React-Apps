{"version":3,"sources":["ColorBoxes/assets.js","IndexFiles/NavBar.js","IndexFiles/DrawerComponent.js","Clicker/Clicker.js","Dice/Die.js","Dice/RollDie.js","Loto/Ball.js","Loto/Lottory.js","Flip/Coin.js","Flip/Flip.js","ColorBoxes/Box.js","ColorBoxes/ColorBoxes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","choiceFromArray","arr","Math","floor","random","length","NavBar","handleDrawerOpen","this","props","CssBaseline","AppBar","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Component","DrawerComponent","open","handleDrawerClose","routes","Drawer","anchor","Divider","List","map","route","key","url","to","ListItem","Button","ListItemIcon","ListItemText","name","defaultProps","Clicker","eHandler","e","setState","state","randInt","status","num","bind","className","Die","face","roll","RollDie","rand","prsntNum1","prsntNum2","currentNum1","currentNum2","isRolling","setTimeout","disabled","LottoBall","Lottory","Array","from","numB","newNum","test","i","push","maxNum","n","Coin","data","flag","src","alt","height","width","Filp","numOfFlips","headCount","tailCount","current","flipFlag","ans","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","style","marginTop","Box","handelClick","newColor","backgroundColor","ColorBoxes","boxes","nBoxes","_","App","useState","setOpen","padding","maxWidth","exact","default","path","Flip","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.541de0bc.chunk.js","sourcesContent":["let colors= ['aqua', 'black', 'blue', 'fuchsia', 'gray', 'green', \r\n            'lime', 'maroon', 'navy', 'olive', 'orange', 'purple', \r\n            'red', 'silver', 'teal', 'white', 'yellow'];\r\n\r\n\r\nlet choiceFromArray = (arr)=>{\r\n    return arr[Math.floor(Math.random()*arr.length)]\r\n}\r\nmodule.exports = {colors,choiceFromArray}","import React, { Component } from 'react'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        const {handleDrawerOpen} = this.props\r\n        return (\r\n            <>\r\n            <CssBaseline/>\r\n            <AppBar  >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n            // className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Fun React Apps \r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default  NavBar","import React, { Component } from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\n\r\nclass DrawerComponent extends Component {\r\n    static  defaultProps ={\r\n        routes:[\r\n            {\r\n                url:\"/color\",\r\n                name:\"Colour Boxes\"},\r\n            {\r\n                url:'/rolldie',\r\n                name:\"Roll Die\"\r\n            },{\r\n                url:\"/click\",\r\n                name:\"Count\"\r\n            },{\r\n                url:'/lottory',\r\n                name:\"Lottory\"\r\n            },{\r\n                url:'flip',\r\n                name:'Flip'\r\n            }\r\n        ]\r\n    }\r\n    render() {\r\n        const {open,handleDrawerClose,routes} = this.props;\r\n        return (\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n            >\r\n            <IconButton onClick={handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n                </IconButton>\r\n                <Divider/>\r\n                <List>\r\n                    {routes.map(route=>(\r\n                    <Link key={route.url} to={route.url}>\r\n                    <ListItem key={route.url}>\r\n                    <Button key={route.url}>\r\n                        <ListItemIcon>\r\n                            <ColorLensIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText>\r\n                            {route.name}\r\n                        </ListItemText>\r\n                    </Button>\r\n                    </ListItem>\r\n                    </Link>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DrawerComponent;\r\n","import React, { Component } from 'react'\r\n\r\nclass Clicker extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            num : 0,\r\n            status:false\r\n        }\r\n        this.eHandler = this.eHandler.bind(this)\r\n    }\r\n\r\n    eHandler=(e)=>{\r\n        this.setState((state)=>{\r\n            let randInt = Math.floor(Math.random()*10)\r\n            if (randInt===7){\r\n                state.status = true;\r\n            }\r\n            return {num:randInt}\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Clicker\">\r\n                <h1>Count Clicks</h1>\r\n                <h1>{this.state.num}</h1>\r\n                <div className=\"Clicker-Button\">\r\n                    {this.state.status?<h1>Game Over</h1>:<button onClick={this.eHandler}>Click Me</button>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Clicker","import React, { Component } from 'react'\r\nimport './Die.css'\r\n\r\nclass Die extends Component{\r\n    render(){\r\n        return (\r\n            <i className={` Die fas fa-dice-${this.props.face} ${this.props.roll && 'rolling'}`}></i>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Die","import React, { Component } from 'react'\r\nimport Die from './Die'\r\nimport './RollDie.css'\r\n\r\nclass RollDie extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentNum1 : 'one',\r\n            currentNum2 : 'one',\r\n            isRolling :false\r\n        }\r\n        this.rand = this.rand.bind(this)\r\n\r\n    }\r\n    static defaultProps= {\r\n        num : ['one','two','three','four','five','six'],\r\n    }\r\n\r\n    rand = ()=>{\r\n        let prsntNum1 = this.props.num[Math.floor(Math.random()*this.props.num.length)]\r\n        let prsntNum2 = this.props.num[Math.floor(Math.random()*this.props.num.length)]\r\n        this.setState({currentNum1:prsntNum1,currentNum2:prsntNum2,isRolling:true})\r\n        setTimeout(()=>{\r\n            this.setState({isRolling:false})\r\n        },1000)\r\n    }\r\n    render(){\r\n        const {currentNum1,currentNum2,isRolling} = this.state;\r\n        return (\r\n            <div className=\"RollDie\">\r\n                <h1>Roll Dice</h1>\r\n                <Die face={currentNum1} roll={isRolling}/>\r\n                <Die face={currentNum2} roll={isRolling}/>\r\n                <h1>Die Rolled {currentNum1}&{currentNum2}</h1>\r\n                <button onClick={this.rand} disabled={isRolling}>Change</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RollDie","import React, { Component } from 'react'\r\nimport './Ball.css'\r\n\r\nclass LottoBall extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"circle\">\r\n                <h1>{this.props.num}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LottoBall","import React, { Component } from 'react'\r\nimport LottoBall from './Ball';\r\nimport \"./Lottory.css\"\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Lottory extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            num :Array.from({length:this.props.numB}).map(()=>(\"-\"))\r\n        }\r\n        this.newNum = this.newNum.bind(this)\r\n    }\r\n\r\n    static defaultProps ={\r\n        maxNum :40,\r\n        numB:6\r\n    }\r\n\r\n    newNum(){\r\n        let test = [];\r\n        for(let i=0;i<this.props.numB;i++){\r\n            test.push(Math.floor(Math.random()*this.props.maxNum))\r\n        }\r\n        this.setState({num:[...test]})\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='Lottory'>\r\n                <h1> Genetrate Six Random Numbers</h1>\r\n                <div className=\"Lottory-balls\">\r\n                {this.state.num.map((n,i) => <LottoBall num={n} key={i}/>)}\r\n                </div>\r\n            <Button variant=\"contained\" onClick={this.newNum}>Change</Button>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Lottory","import React, { Component } from 'react'\r\n\r\nclass Coin extends Component{\r\n    render(){\r\n        let data = [\r\n            [\"Tail\", \"https://www.pngitem.com/pimgs/m/123-1232373_coin-png-pic-heads-and-tails-indian-coin.png\"],\r\n            [\"Head\",\"https://upload.wikimedia.org/wikipedia/commons/c/cd/S_Half_Dollar_Obverse_2016.jpg\"]\r\n        ]\r\n        return (\r\n            <div className=\"Coin\">\r\n            <h1>{data[this.props.flag][0]}</h1>\r\n            <img src={data[this.props.flag][1]} alt={this.props.flag?\"Head\":\"Tail\"} height=\"100\" width=\"100\"></img>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Coin","import React, { Component } from \"react\";\r\nimport Coin from './Coin'\r\nimport './Flip.css'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Filp extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      numOfFlips : 0,\r\n      headCount : 0,\r\n      tailCount : 0,\r\n      current:null\r\n    }\r\n    this.flipFlag = this.flipFlag.bind(this)\r\n  }\r\n  flipFlag(){\r\n    let ans = (Math.floor(Math.random()*2))\r\n    ans?this.setState({headCount:this.state.headCount+1}):this.setState({tailCount:this.state.tailCount+1});\r\n    this.setState({numOfFlips:this.state.numOfFlips+1,current:ans})\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Flip\">\r\n        <h1>Flip a Coin</h1>\r\n        <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                Number Of Flips\r\n              </TableCell>\r\n              <TableCell>\r\n                Heads\r\n              </TableCell>\r\n              <TableCell>\r\n                Tails\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>\r\n              {this.state.numOfFlips}\r\n              </TableCell>\r\n              <TableCell>\r\n              {this.state.headCount}\r\n              </TableCell>\r\n              <TableCell>\r\n              {this.state.tailCount}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n        \r\n        <Button  style={{marginTop:\"1em\"}}variant=\"contained\" onClick={this.flipFlag}>Change</Button>\r\n        {this.state.current!=null && <Coin flag={this.state.current}/>}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Filp;\r\n","import React, { Component } from 'react'\r\nimport {colors, choiceFromArray} from './assets'\r\nimport './Box.css'\r\nclass Box extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            color:choiceFromArray(colors)\r\n        }\r\n        this.handelClick = this.handelClick.bind(this)\r\n    }\r\n    handelClick(){\r\n        let newColor;\r\n        do {\r\n            newColor = choiceFromArray(colors)\r\n        }while(newColor===this.state.color)\r\n        this.setState({color:newColor})\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Box\" style={{backgroundColor:this.state.color}} onClick={this.handelClick}>\r\n                <h2>Box</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Box\r\n","import React, { Component } from 'react'\r\n\r\nimport Box from './Box'\r\nimport './ColorBox.css'\r\n\r\nclass ColorBoxes extends Component{\r\n    static defaultProps = { nBoxes: 18 } \r\n    render(){\r\n        let boxes = Array.from({length:this.props.nBoxes}).map((_,i)=>(<Box key={i}/>))\r\n        return(\r\n            <div>\r\n                <h1>Diffrent Colours</h1>\r\n                <p>Click To change Colors</p>\r\n            <div className=\"colorBoxes\">{boxes}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorBoxes","import React,{useState} from 'react';\nimport {Route,Switch,HashRouter} from 'react-router-dom'\n\nimport Paper from '@material-ui/core/Paper';\n\n\nimport Navbar from './IndexFiles/NavBar'\nimport DrawerComponent from \"./IndexFiles/DrawerComponent\";\nimport Clicker from './Clicker/Clicker'\nimport RollDie from './Dice/RollDie';\nimport Lottory from './Loto/Lottory';\nimport Flip from './Flip/Flip'\nimport ColorBoxes from './ColorBoxes/ColorBoxes'\n\nimport './App.css';\n\n\nfunction App() {\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n \n  return (\n    <HashRouter>\n    <div className=\"App\">\n      <Navbar handleDrawerOpen={handleDrawerOpen}/>\n      <DrawerComponent handleDrawerClose={handleDrawerClose} open={open}/>\n      <Switch>\n      <Paper style={{padding:\"2rem\",maxWidth:\"60%\"}}>\n        <Route exact default path='/color'component={ColorBoxes}/>\n        <Route exact path='/flip'component={Flip}/>\n        <Route exact path='/lottory'component={Lottory }/>\n        <Route exact path='/rolldie'component={RollDie}/>\n        <Route exact path='/click'component={Clicker}/>\n        <Route/>\n      </Paper>\n      </Switch>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}